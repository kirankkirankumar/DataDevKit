scalar Url
scalar Time
scalar JSON

type User {
    id: ID!@mapping(type:"primarykey")
    username: String!
    first_name: String!
    last_name: String!  
    full_name: String!
    name: String! 
    avatar_url: Url!
}

type Stat {
    id: ID!
    views: Int!
    likes: Int!
    retweets: Int!
    total:Int!
    responses: Int!
}


type Tweet {
    id: ID! @mapping(type:"primarykey")
    # The tweet text. No more than 140 characters!
    body: String!
    # When the tweet was published
    date: Time!
    # Who published the tweet
    Author: User! @mapping(type :"many2many")
    # Views, retweets, likes, etc
    Stats: Stat!
}

type Notification {
    id: ID! @mapping(type:"primarykey")
    date: Time
    total:Int! 
    type: String @mapping(type:"unique")
}

type Meta {
    count: Int!
}

type Query {
    Tweet(id: ID!): Tweet
    Tweets(limit: Int, skip: Int, sort_field: String, sort_order: String): [Tweet]
    TweetsMeta: Meta
    User(id: ID!): User
    Notifications(limit: Int): [Notification]
    NotificationsMeta: Meta
    Events : Event
}

enum Status{

    STARTED,
    INPROGRESS,
    COMPLETED

}

type Event {

    id: ID! @mapping(type:"primarykey")
    date: Time
    total:Int
    type: String!
    status:Status!

}

type Mutation {
    createTweet (
        body: String
    ): Tweet
    deleteTweet(id: ID!): Tweet
    markTweetRead(id: ID!): Boolean
    deleteEvent(id: ID!): Event
}

directive @mapping(type: String = "Directive used on fields in graphql entities") on FIELD_DEFINITION


